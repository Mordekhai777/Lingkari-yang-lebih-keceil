<!DOCTYPE html>
<html lang="id">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Game Edukasi: Pilih Yang Lebih Kecil</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Comic+Neue:wght@700&display=swap');
        
        body {
            font-family: 'Comic Neue', cursive;
            background: linear-gradient(135deg, #c2e9fb 0%, #a1c4fd 100%);
            overflow-x: hidden;
            margin: 0;
            padding: 0;
        }
        
        .game-container {
            background-color: #fff;
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(31, 38, 135, 0.2);
            width: 100%;
            max-width: 1200px;
            margin: 0 auto;
        }
        
        .title {
            background: linear-gradient(45deg, #FF9A9E 0%, #FAD0C4 99%, #FAD0C4 100%);
            border-radius: 15px;
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            padding: 12px;
        }
        
        .item-container {
            background-color: #FFEFD5;
            border-radius: 15px;
            transition: all 0.3s ease;
            margin-bottom: 15px;
            padding: 12px;
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        
        .item-container:hover {
            transform: translateY(-5px);
        }
        
        .item-pair {
            display: flex;
            justify-content: space-around;
            align-items: center;
            width: 100%;
            margin-bottom: 10px;
        }
        
        .item {
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
            padding: 8px;
        }
        
        .item.selected::after {
            content: '';
            position: absolute;
            top: -8px;
            left: -8px;
            right: -8px;
            bottom: -8px;
            border: 5px solid #FF6B6B;
            border-radius: 50%;
            animation: pulse 1.5s infinite;
        }
        
        @keyframes pulse {
            0% {
                transform: scale(0.95);
                box-shadow: 0 0 0 0 rgba(255, 107, 107, 0.7);
            }
            
            70% {
                transform: scale(1);
                box-shadow: 0 0 0 10px rgba(255, 107, 107, 0);
            }
            
            100% {
                transform: scale(0.95);
                box-shadow: 0 0 0 0 rgba(255, 107, 107, 0);
            }
        }
        
        .item-name {
            background-color: #FFB6C1;
            border-radius: 10px;
            color: #333;
            padding: 6px 12px;
            text-align: center;
            font-weight: bold;
            width: 90%;
            margin: 0 auto;
        }
        
        .btn-next {
            background: linear-gradient(45deg, #FF9A9E 0%, #FAD0C4 99%, #FAD0C4 100%);
            transition: all 0.3s ease;
            padding: 10px 20px;
            border-radius: 50px;
            font-weight: bold;
            color: #5a287d;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }
        
        .btn-next:hover {
            transform: scale(1.05);
        }
        
        .btn-check {
            background: linear-gradient(45deg, #A1FFCE 0%, #FAFFD1 100%);
            transition: all 0.3s ease;
            padding: 10px 20px;
            border-radius: 50px;
            font-weight: bold;
            color: #2a6041;
            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.1);
        }
        
        .btn-check:hover {
            transform: scale(1.05);
        }
        
        .confetti {
            position: absolute;
            width: 15px;
            height: 15px;
            background-color: #f00;
            animation: fall 3s ease-in infinite;
            opacity: 0;
        }
        
        @keyframes fall {
            0% {
                transform: translateY(-100px) rotate(0deg);
                opacity: 1;
            }
            100% {
                transform: translateY(600px) rotate(360deg);
                opacity: 0;
            }
        }
        
        .floating {
            animation: floating 3s ease-in-out infinite;
        }
        
        @keyframes floating {
            0% { transform: translate(0, 0px); }
            50% { transform: translate(0, 15px); }
            100% { transform: translate(0, 0px); }
        }
        
        .bounce {
            animation: bounce 2s ease infinite;
        }
        
        @keyframes bounce {
            0%, 20%, 50%, 80%, 100% {transform: translateY(0);}
            40% {transform: translateY(-20px);}
            60% {transform: translateY(-10px);}
        }
        
        .progress-bar {
            height: 20px;
            background-color: #e9ecef;
            border-radius: 10px;
            overflow: hidden;
        }
        
        .progress {
            height: 100%;
            background: linear-gradient(45deg, #A1FFCE 0%, #FAFFD1 100%);
            border-radius: 10px;
            transition: width 0.5s ease;
        }
        
        .cloud {
            position: absolute;
            background-color: white;
            border-radius: 50%;
            opacity: 0.8;
            z-index: -1;
        }
        
        /* Mobile optimizations */
        @media (max-width: 768px) {
            .game-container {
                padding: 15px;
                margin: 10px;
                width: calc(100% - 20px);
            }
            
            .title h1 {
                font-size: 24px;
            }
            
            .title p {
                font-size: 18px;
            }
            
            .grid-container {
                display: grid;
                grid-template-columns: 1fr;
                gap: 15px;
            }
            
            .item-container {
                margin-bottom: 10px;
            }
            
            .emoji-large {
                font-size: 2.5rem !important;
            }
            
            .emoji-small {
                font-size: 1.5rem !important;
            }
            
            .item-name {
                font-size: 14px;
                padding: 5px 8px;
            }
            
            .btn-check, .btn-next {
                padding: 8px 16px;
                font-size: 16px;
            }
            
            #result-message {
                font-size: 18px;
            }
        }
    </style>
</head>
<body class="min-h-screen p-2 md:p-8">
    <!-- Clouds Background -->
    <div class="clouds">
        <div class="cloud" style="width: 100px; height: 100px; top: 10%; left: 10%;"></div>
        <div class="cloud" style="width: 150px; height: 150px; top: 20%; left: 80%;"></div>
        <div class="cloud" style="width: 120px; height: 120px; top: 60%; left: 5%;"></div>
        <div class="cloud" style="width: 180px; height: 180px; top: 70%; left: 70%;"></div>
    </div>

    <div class="game-container p-3 md:p-6">
        <div class="title p-3 md:p-4 mb-4 md:mb-6 text-center">
            <h1 class="text-2xl md:text-4xl font-bold text-purple-900">Game Edukasi: Pilih Yang Lebih Kecil</h1>
            <p class="text-lg md:text-2xl mt-2 text-purple-700">Ayo pilih gambar yang lebih kecil!</p>
        </div>
        
        <div class="progress-container mb-4 md:mb-6">
            <div class="flex justify-between mb-2">
                <span class="font-bold text-purple-700">Kemajuan:</span>
                <span class="font-bold text-purple-700"><span id="current-level">1</span>/<span id="total-levels">4</span></span>
            </div>
            <div class="progress-bar">
                <div class="progress" style="width: 25%"></div>
            </div>
        </div>

        <div id="game-area" class="mb-6">
            <!-- Level content will be inserted here -->
        </div>

        <div class="flex justify-center gap-3 md:gap-4 mt-4 md:mt-8">
            <button id="check-button" class="btn-check px-4 py-2 md:px-6 md:py-3 rounded-full text-lg md:text-xl font-bold text-green-800 shadow-lg">
                Periksa Jawaban
            </button>
            <button id="next-button" class="btn-next px-4 py-2 md:px-6 md:py-3 rounded-full text-lg md:text-xl font-bold text-purple-800 shadow-lg hidden">
                Lanjut ‚Üí
            </button>
        </div>
        
        <div id="result-message" class="mt-4 md:mt-6 text-center text-xl md:text-2xl font-bold hidden"></div>
    </div>

    <!-- Celebration container -->
    <div id="celebration-container" class="fixed inset-0 pointer-events-none hidden">
        <!-- Confetti will be added here -->
    </div>

    <script>
        // Game data
        const levels = [
            {
                type: "hewan",
                items: [
                    { emoji: "üê∂", name: "Anjing", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] },
                    { emoji: "üôä", name: "Monyet", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] },
                    { emoji: "ü¶â", name: "Burung Hantu", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] },
                    { emoji: "üê±", name: "Kucing", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] }
                ]
            },
            {
                type: "hewan",
                items: [
                    { emoji: "üê∞", name: "Kelinci", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] },
                    { emoji: "üê¢", name: "Kura-kura", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] },
                    { emoji: "üêò", name: "Gajah", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] },
                    { emoji: "ü¶Å", name: "Singa", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] }
                ]
            },
            {
                type: "buah",
                items: [
                    { emoji: "üçé", name: "Apel", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] },
                    { emoji: "üçá", name: "Anggur", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] },
                    { emoji: "üçí", name: "Ceri", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] },
                    { emoji: "üçå", name: "Pisang", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] }
                ]
            },
            {
                type: "buah",
                items: [
                    { emoji: "üçä", name: "Jeruk", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] },
                    { emoji: "üçì", name: "Stroberi", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] },
                    { emoji: "üçç", name: "Nanas", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] },
                    { emoji: "ü•≠", name: "Mangga", sizes: [{ size: "besar", scale: 1.8 }, { size: "kecil", scale: 1 }] }
                ]
            }
        ];

        let currentLevel = 0;
        let selectedItems = [];
        let correctAnswers = [];
        
        // Check if device is mobile
        const isMobile = window.innerWidth <= 768;

        // Initialize game
        document.addEventListener('DOMContentLoaded', () => {
            document.getElementById('total-levels').textContent = levels.length;
            loadLevel(currentLevel);
            
            document.getElementById('check-button').addEventListener('click', checkAnswers);
            document.getElementById('next-button').addEventListener('click', nextLevel);
            
            // Handle window resize
            window.addEventListener('resize', () => {
                if ((window.innerWidth <= 768 && !isMobile) || 
                    (window.innerWidth > 768 && isMobile)) {
                    // Reload current level with new layout
                    loadLevel(currentLevel);
                }
            });
        });

        function loadLevel(levelIndex) {
            const level = levels[levelIndex];
            const gameArea = document.getElementById('game-area');
            gameArea.innerHTML = '';
            selectedItems = [];
            correctAnswers = [];
            
            // Update progress
            document.getElementById('current-level').textContent = levelIndex + 1;
            document.querySelector('.progress').style.width = `${((levelIndex + 1) / levels.length) * 100}%`;
            
            // Create level title
            const levelTitle = document.createElement('h2');
            levelTitle.className = 'text-xl md:text-2xl font-bold mb-4 md:mb-6 text-center text-purple-800';
            levelTitle.textContent = `Level ${levelIndex + 1}: ${level.type === 'hewan' ? 'Hewan' : 'Buah'}`;
            gameArea.appendChild(levelTitle);
            
            // Create grid container - use different layouts for mobile and desktop
            const grid = document.createElement('div');
            grid.className = 'grid-container';
            
            // Determine if we're on mobile
            const isMobile = window.innerWidth <= 768;
            if (isMobile) {
                grid.classList.add('grid', 'grid-cols-1', 'gap-4');
            } else {
                grid.classList.add('grid', 'grid-cols-2', 'md:grid-cols-4', 'gap-4', 'md:gap-6');
            }
            
            gameArea.appendChild(grid);
            
            // Shuffle and create items
            const shuffledItems = [...level.items].sort(() => Math.random() - 0.5);
            
            shuffledItems.forEach(item => {
                // Shuffle sizes
                const shuffledSizes = [...item.sizes].sort(() => Math.random() - 0.5);
                
                // Create item container
                const itemContainer = document.createElement('div');
                itemContainer.className = 'item-container';
                
                // Create item pair container
                const pairContainer = document.createElement('div');
                pairContainer.className = 'item-pair';
                
                // Add correct answer to the list
                const smallSizeIndex = shuffledSizes.findIndex(s => s.size === 'kecil');
                correctAnswers.push(`${item.name}-${smallSizeIndex}`);
                
                // Create both sizes
                shuffledSizes.forEach((sizeObj, sizeIndex) => {
                    const itemElement = document.createElement('div');
                    itemElement.className = 'item';
                    itemElement.id = `${item.name}-${sizeIndex}`;
                    
                    const emoji = document.createElement('span');
                    
                    // Adjust size based on device
                    if (isMobile) {
                        emoji.style.fontSize = sizeObj.size === 'besar' ? '2.5rem' : '1.5rem';
                        emoji.classList.add(sizeObj.size === 'besar' ? 'emoji-large' : 'emoji-small');
                    } else {
                        emoji.style.fontSize = `${sizeObj.scale * 3}rem`;
                    }
                    
                    emoji.textContent = item.emoji;
                    emoji.className = 'mb-2 ' + (sizeObj.size === 'kecil' ? 'bounce' : 'floating');
                    
                    itemElement.appendChild(emoji);
                    
                    itemElement.addEventListener('click', () => selectItem(itemElement.id, item.name));
                    pairContainer.appendChild(itemElement);
                });
                
                // Create item name
                const nameElement = document.createElement('div');
                nameElement.className = 'item-name';
                nameElement.textContent = item.name;
                
                itemContainer.appendChild(pairContainer);
                itemContainer.appendChild(nameElement);
                grid.appendChild(itemContainer);
            });
            
            // Hide result message and next button
            document.getElementById('result-message').classList.add('hidden');
            document.getElementById('next-button').classList.add('hidden');
            document.getElementById('check-button').classList.remove('hidden');
        }

        function selectItem(id, itemName) {
            // Remove previous selection for this item
            const previousSelection = selectedItems.find(item => item.includes(itemName));
            if (previousSelection) {
                document.getElementById(previousSelection).classList.remove('selected');
                selectedItems = selectedItems.filter(item => item !== previousSelection);
            }
            
            // Add new selection
            const element = document.getElementById(id);
            element.classList.add('selected');
            selectedItems.push(id);
        }

        function checkAnswers() {
            const resultMessage = document.getElementById('result-message');
            resultMessage.classList.remove('hidden');
            
            // Check if all items are selected
            if (selectedItems.length < levels[currentLevel].items.length) {
                resultMessage.textContent = 'Pilih semua gambar yang lebih kecil dulu ya!';
                resultMessage.className = 'mt-4 md:mt-6 text-center text-xl md:text-2xl font-bold text-yellow-600';
                return;
            }
            
            // Check answers
            const allCorrect = correctAnswers.every(answer => selectedItems.includes(answer));
            
            if (allCorrect) {
                resultMessage.textContent = 'Hebat! Semua jawaban benar! üéâ';
                resultMessage.className = 'mt-4 md:mt-6 text-center text-xl md:text-2xl font-bold text-green-600';
                document.getElementById('check-button').classList.add('hidden');
                document.getElementById('next-button').classList.remove('hidden');
                
                // Show celebration
                celebrate();
            } else {
                resultMessage.textContent = 'Coba lagi ya, perhatikan mana yang lebih kecil!';
                resultMessage.className = 'mt-4 md:mt-6 text-center text-xl md:text-2xl font-bold text-red-600';
            }
        }

        function nextLevel() {
            currentLevel++;
            
            if (currentLevel < levels.length) {
                loadLevel(currentLevel);
            } else {
                // Game completed
                const gameArea = document.getElementById('game-area');
                gameArea.innerHTML = `
                    <div class="text-center p-4 md:p-8">
                        <h2 class="text-2xl md:text-3xl font-bold text-purple-800 mb-3 md:mb-4">Selamat! üéâ</h2>
                        <p class="text-xl md:text-2xl text-purple-700 mb-4 md:mb-6">Kamu telah menyelesaikan semua level!</p>
                        <div class="text-5xl md:text-6xl mb-6 md:mb-8">üèÜ</div>
                        <button id="restart-button" class="btn-check px-4 py-2 md:px-6 md:py-3 rounded-full text-lg md:text-xl font-bold text-green-800 shadow-lg">
                            Main Lagi
                        </button>
                    </div>
                `;
                
                document.getElementById('restart-button').addEventListener('click', () => {
                    currentLevel = 0;
                    loadLevel(currentLevel);
                });
                
                document.getElementById('check-button').classList.add('hidden');
                document.getElementById('next-button').classList.add('hidden');
                document.getElementById('result-message').classList.add('hidden');
                
                // Big celebration
                celebrate(true);
            }
        }

        function celebrate(big = false) {
            const celebrationContainer = document.getElementById('celebration-container');
            celebrationContainer.classList.remove('hidden');
            celebrationContainer.innerHTML = '';
            
            const colors = ['#FF9A9E', '#FAD0C4', '#A1FFCE', '#FAFFD1', '#FFB6C1', '#FF6B6B'];
            const confettiCount = big ? (window.innerWidth <= 768 ? 50 : 100) : (window.innerWidth <= 768 ? 30 : 50);
            
            for (let i = 0; i < confettiCount; i++) {
                const confetti = document.createElement('div');
                confetti.className = 'confetti';
                confetti.style.left = `${Math.random() * 100}%`;
                confetti.style.backgroundColor = colors[Math.floor(Math.random() * colors.length)];
                confetti.style.animationDelay = `${Math.random() * 3}s`;
                confetti.style.width = `${Math.random() * 10 + 5}px`;
                confetti.style.height = `${Math.random() * 10 + 5}px`;
                confetti.style.borderRadius = Math.random() > 0.5 ? '50%' : '0';
                
                celebrationContainer.appendChild(confetti);
            }
            
            setTimeout(() => {
                celebrationContainer.classList.add('hidden');
            }, 3000);
        }
    </script>
</body>
</html>index
